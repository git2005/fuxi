<?xml version="1.0" encoding="UTF-8" ?>
<!--配置数据源  事务  映射文件  加载插件  加载配置等，全局的文件-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <settings>
        <!--启动驼峰转换的映射 默认false-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--打印日志-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>

        <!--开启懒加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
    </settings>

    <!--环境-->
    <!--default:默认数据源 如果多个数据源，一般情况直接build的就是默认的，也可以指定 build(reder,"development")-->
    <environments default="development">
        <!--唯一性标志，指定数据源的名字-->
        <environment id="development">
        <!--transactionManager:事务管理  type="[JDBC|MANAGED]" jdbc管理事务 MANAGED容器管理-->
            <!--
       JDBC – 这个配置直接使用了 JDBC 的提交和回滚设施，它依赖从数据源获得的连接来管理事务作用域。
       MANAGED – 这个配置几乎没做什么。它从不提交或回滚一个连接，而是让容器来管理事务的整个生命周期.
            -->
            <transactionManager type="JDBC"/>
            <!--dataSource:数据源  POOLED：数据库链接池  type="[UNPOOLED|POOLED|JNDI]"-->
            <!--Pooled:是以数据库连接池的形式获取数据源
                Unpooled：普通数据源_一般只做测试用
                JNDI：远程数据源-->
            <dataSource type="POOLED">

                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/customerdb?characterEncoding=utf8&amp;useSSL=true"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
<!--resouce加载xml  class加载接口  URL:绝对路径 package name="org.mybatis.builder"加载整个包-->
        <!--加载映射文件，只要加载了它，mybaits才会认识它：必须一致-->
        <mapper resource="com/mapper/TabEmpMapper.xml"/>

    </mappers>
</configuration>


















